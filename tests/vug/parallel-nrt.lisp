(in-package :incudine-tests)

(deftest parallel-nrt.1
    (let ((lock (bt:make-lock))
          (vec (make-array 4 :fill-pointer 0))
          (frames +vug-test-duration+))
      (flet ((test (buf freq)
               (bt:make-thread
                 (lambda ()
                   (bounce-to-buffer (buf)
                     (bt:with-lock-held (lock)
                       (vector-push (incudine::output-pointer) vec))
                     (vug-sine-test-1 freq .2 0)
                     (sleep 2))))))
        (with-buffers ((b0 frames)
                       (b1 frames)
                       (b2 frames)
                       (b3 frames))
          (let ((t0 (test b0 1000))
                (t1 (test b1 2000))
                (t2 (test b2 3000))
                (t3 (test b3 4000)))
            (mapc #'bt:join-thread (list t0 t1 t2 t3))
            (map-into-buffer *buffer-test-c1* #'+ b0 b1 b2 b3)
            (values (md5sum-buffer-test
                      (scale-and-round-buffer *buffer-test-c1* 1d7)
                      :little-endian)
                    (length (remove-duplicates vec)))))))
  #(26 236 177 254 136 243 175 87 158 99 108 91 126 114 173 198)
  4)
