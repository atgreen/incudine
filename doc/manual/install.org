* Installation
** Requirements
Incudine works with [[http://www.sbcl.org][SBCL]], an implementation of ANSI Common Lisp with a
high-performance native compiler.

*** Common Lisp packages

- [[https://common-lisp.net/project/alexandria][Alexandria]]

- [[https://common-lisp.net/project/bordeaux-threads][Bordeaux-threads]]

- [[https://common-lisp.net/project/cffi][CFFI]]

- [[https://github.com/sionescu/swap-bytes][Swap-bytes]]

- [Optional] [[https://common-lisp.net/project/linedit/][Linedit]] for incudine command

*** Foreign libraries

- Pthread

- [[https://jackaudio.org][JACK]] or [[http://www.portaudio.com][PortAudio >= 1.9]]

- [[http://portmedia.sourceforge.net/portmidi][PortMidi]]

- [[http://www.mega-nerd.com/libsndfile][libsndfile >= 1.0.19]]

- [[http://www.fftw.org][FFTW >= 3.0]]

- [[https://www.gnu.org/software/gsl][GNU Scientific Library (GSL)]]

- [Optional] [[https://www.fluidsynth.org/][FluidSynth]]

- [Optional] [[http://drobilla.net/software/lilv][LILV]]

#+texinfo: @noindent
Some Linux distributions provide separated devel packages necessary to
compile Incudine, for example ~jack-audio-connection-kit-devel~,
~portaudio-devel~, etc.

** Download
The latest source code can be obtained via Git:

#+begin_example
git clone git://git.code.sf.net/p/incudine/incudine
#+end_example

#+texinfo: @noindent
Mirror:

#+begin_example
git clone git://github.com/titola/incudine.git
#+end_example

** Configuration
Put the incudine directory where ASDF finds your systems, for example:

#+begin_example
mv incudine ${HOME}/common-lisp/
#+end_example

#+texinfo: @noindent
If you use [[https://www.quicklisp.org/][Quicklisp]]:

#+begin_example
mv incudine /path/to/quicklisp/local-projects/
#+end_example

#+vindex: *rt-priority*
#+vindex: *nrt-priority*
#+vindex: *receiver-default-priority*
#+texinfo: @noindent
Edit and copy the sample configuration file, with particular attention
to the priorities ~*rt-priority*~, ~*nrt-priority*~ and
~*receiver-default-priority*~

#+begin_example
cp /path/to/incudine/incudinerc-example ${HOME}/.incudinerc
#+end_example

#+texinfo: @noindent
If MMCSS (Multimedia Class Scheduler Service) is available on Windows,
the realtime thread is associated with the "Pro Audio" task.

#+texinfo: @noindent
Here is a test:

#+begin_example
(require :incudine)
(in-package :scratch)
(dsp! hello-world () (out (sine 440 .3)))
(rt-start)
;; You should hear an oscillation at 440 Hz.
(hello-world)
(free 0)
(rt-stop)
;; It writes a soundfile.
(bounce-to-disk ("/tmp/test.wav" :channels 1 :duration 1) (hello-world))
#+end_example

#+texinfo: @noindent
[[https://www.gnu.org/software/emacs][GNU Emacs]] and
[[https://www.gnu.org/software/texinfo][Texinfo]] are required
to build the documentation:

#+begin_example
cd doc/manual && make info html pdf
#+end_example

#+texinfo: @noindent
This builds the Info, HTML and PDF documentation from the Org and
Texinfo sources.

#+texinfo: @noindent
If you want to create and install the ~incudine~ command:

#+begin_example
cd src && ./install_executable
#+end_example

#+texinfo: @noindent
The options for the script =install_executable= are:

#+begin_example
--prefix=PREFIX       install architecture-independent files in PREFIX
                      [/usr/local]
--bindir=DIR          user executables [PREFIX/bin]
--swank-loader=PATH   support for Swank server with path to swank-loader.lisp
--without-aclrepl     do not use Allegro CL-style Read-Eval-Print Loop.
--with-clm            use cudere-clm, the Incudine version of CLM.
--with-linedit        support for Linedit, readline-style library in CL.
--with-fluidsynth     support for FluidSynth SoundFont synthesizer.
--with-ladspa         support for LADSPA plugins.
--with-lv2            support for LV2 plugins.
--with-snd            support for the sound editor Snd.
--with-module=NAME    load the module NAME before to create the executable.
--save-options=OPTS   further arguments for SAVE-LISP-AND-DIE.
--sbcl-options=OPTS   options for SBCL.
--before-save=FORM    read and evaluate FORM before to create the executable.
#+end_example

#+texinfo: @noindent
For example:

#+begin_example
sh install_executable --with-linedit --with-ladspa --with-snd  \
                      --with-module=ltk --with-module=dsp-collection
#+end_example

#+texinfo: @noindent
or with Swank server and other options:

#+begin_example
sh install_executable --with-linedit --with-fluidsynth \
                      --with-ladspa --with-lv2 --with-snd \
                      --swank-loader=/path/to/slime/swank-loader.lisp \
                      --with-module=inferior-shell \
                      --before-save="(use-package 'inferior-shell :scratch)"
#+end_example

#+texinfo: @noindent
Note: the support for LV2 plugins requires [[http://drobilla.net/software/lilv][Lilv]],
a LV2 host library.

#+texinfo: @noindent
If you use [[https://github.com/slime/slime][SLIME]], add these lines
to =${HOME}/.swank.lisp= if necessary:

#+begin_example
;; Avoid problems in realtime because the default value is :SPAWN
;; (each request in a separate thread)
,#+sbcl (setf swank:*communication-style* :sigio)
;; Useful to redirect standard output from any other threads into the REPL
,#+sbcl (defparameter swank:*globally-redirect-io* t)
#+end_example

#+texinfo: @noindent
There is also a major mode for GNU Emacs. If you want to install it,
add the following lines to your .emacs file:

#+begin_example
(push "/path/to/incudine/contrib/editors/emacs" load-path)
(require 'incudine)
;; org-babel functions
(require 'ob-incudine)
#+end_example

*** Sample configuration file
