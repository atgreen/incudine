(in-package :scratch)

(dsp! flux-rectified-test ((buf buffer) flux-threshold)
  (with ((fft (make-fft 2048 :window-function (gen:hamming)))
         (abuf (make-abuffer fft))
         (hop-size (sample->fixnum (* *sample-rate* 0.1)))
         ;; The result of FLUX is unnormalized
         (threshold (* flux-threshold (fft-size fft)))
         (result +sample-zero+))
    (declare (type sample threshold result))
    (setf (fft-input fft) (buffer-play buf 1 0 t #'identity))
    (with-control-period (hop-size)
      ;; Spectral flux with half-wave rectifier function
      ;; and L1-norm (Dixon DAFx-06)
      (setf result (sample (if (> (flux abuf t t) threshold) 100 0))))
    (out (tick (fft-input fft))
         (prog1 (ringz result 3000 .1)
           (unless (zerop result)
             (setf result +sample-zero+))))))

#|
(defvar loop-1 (buffer-load "/tmp/loop-1.wav"))
(set-rt-block-size 1)
(rt-start)
(flux-rectified-test loop-1 0.1)
|#
